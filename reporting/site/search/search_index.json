{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Proc\u00e9dure installation & s\u00e9curisation site Wordpress [POC] Cette documentation abordera de comment installer un site Wordpress de fa\u00e7on s\u00e9curiser pour un contexte de production. R\u00e9seaux Topologie Les entreprises disposant d\u2019un site Web public que les clients utilisent doivent rendre leur serveur Web accessible \u00e0 Internet. Pour prot\u00e9ger le r\u00e9seau local de l\u2019entreprise, le serveur Web est install\u00e9 sur un serveur distinct des ressources internes. La DMZ permet la communication entre les ressources commerciales prot\u00e9g\u00e9es, telles que les bases de donn\u00e9es internes, et le trafic qualifi\u00e9 d\u2019Internet. Un r\u00e9seau DMZ sert de tampon entre Internet et le r\u00e9seau priv\u00e9 d\u2019une entreprise. La DMZ est isol\u00e9e par une passerelle de s\u00e9curit\u00e9, telle qu\u2019un pare-feu, qui filtre le trafic entre la DMZ et un r\u00e9seau LAN. Le serveur DMZ par d\u00e9faut est prot\u00e9g\u00e9 par une autre passerelle de s\u00e9curit\u00e9 qui filtre le trafic provenant de r\u00e9seaux externes. Nous utiliseront une machine virtuelle qui utilisera opnsense comme OS. Qui sera office de routeur firewall. Le compartiment des diff\u00e9rents r\u00e9seaux utilisera des switchs virtuels. Matrice de flux et ACL Source/Destination Serveur Web Serveur de BDD WAN Serveur Web - - permit - permit Serveur de BDD - deny - - deny WAN - permit - deny - Dans cette matrice : La connexion entre le serveur web et le serveur de base de donn\u00e9es est autoris\u00e9e. Le WAN peut acc\u00e9der au serveur web, mais l'acc\u00e8s au serveur de base de donn\u00e9es est refus\u00e9. Les tirets (-) indiquent les cases o\u00f9 aucun flux n'est autoris\u00e9 ou refus\u00e9. Cela peut \u00eatre interpr\u00e9t\u00e9 comme \"aucune r\u00e8gle sp\u00e9cifique d\u00e9finie\". Les donn\u00e9es peuvent circuler de mani\u00e8re bidirectionnelle entre les sources et les destinations La r\u00e8gle par d\u00e9faut est deny deny Nous detailleronts pas la configuration d'ACL sur l'opnsense. NAT Sur l'interface WAN il faudra cr\u00e9er la r\u00e8gle NAT de port forwarding suivante: DESTINATION IP FROM IP PORT FORWARD IP FORWARD PORT PROTOCOL @WAN_IP ANY 80 @LAN_IP_WEB 80 TCP @WAN_IP ANY 443 @LAN_IP_WEB 443 TCP @WAN_IP : Correspond \u00e0 l'IP WAN de l'interface du routeur firewall @LAN_IP_WEB : Correspond \u00e0 l'IP lan du serveur WEB. Nous detailleronts pas la configuration de r\u00e8gles NAT de port forwarding sur l'opnsense. Back end Update sudo apt update sudo apt full-upgrade -y reboot Installation base de donn\u00e9es Vous pouvez installer MariaDB \u00e0 l'aide de la commande suivante : apt install mariadb-server mariadb-client D\u00e9marrez le d\u00e9mon du serveur de base de donn\u00e9es et activez-le pour qu'il d\u00e9marre automatiquement au prochain d\u00e9marrage \u00e0 l'aide des commandes suivantes : systemctl start mariadb systemctl enable mariadb Post installation Une fois le serveur de base de donn\u00e9es install\u00e9, ex\u00e9cutez la commande suivante pour s\u00e9curiser votre serveur MariaDB: mysql_secure_installation Plusieurs questions de configuration vous seront alors pos\u00e9es, auxquelles vous devrez r\u00e9pondre Y \u00e0 chacune d'entre elles. Remove anonymous users? [Y/n]: Y Disallow root login remotely? [Y/n]: Y Remove test database and access to it? [Y/n]: Y Reload privilege tables now? [Y/n]: Y Relancer le service mariadb: systemctl restart mariadb Cr\u00e9ation un utilisateur base de donn\u00e9es limiter CREATE USER 'wordpress'@'192.168.0.1' IDENTIFIED BY 'CHANGEME'; CREATE DATABASE wordpress; GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress'@'192.168.0.1'; FLUSH PRIVILEGES; EXIT; Fron end Update sudo apt update sudo apt full-upgrade -y reboot Installation basique de Wordpress Installation Apache Nous commencerons par le serveur web Apache. Pour installer le serveur web Apache, ex\u00e9cutez la commande suivante : sudo apt install apache2 -y Puis on active le service: sudo systemctl enable apache2 && sudo systemctl start apache2 V\u00e9rification que le sevice fonctionne: sudo systemctl status apache2 La sortie de commande: root@host:~# sudo systemctl status apache2 \u25cf apache2.service - The Apache HTTP Server Loaded: loaded (/lib/systemd/system/apache2.service; enabled; preset: enabled) Active: active (running) since Mon 2024-04-08 20:58:30 UTC; 13s ago Docs: https://httpd.apache.org/docs/2.4/ Main PID: 2011 (apache2) Tasks: 55 (limit: 4652) Memory: 17.1M CPU: 141ms CGroup: /system.slice/apache2.service \u251c\u25002011 /usr/sbin/apache2 -k start \u251c\u25002012 /usr/sbin/apache2 -k start \u2514\u25002013 /usr/sbin/apache2 -k start Apr 08 20:58:30 wordpress systemd[1]: Starting apache2.service - The Apache HTTP Server... Apr 08 20:58:30 wordpress systemd[1]: Started apache2.service - The Apache HTTP Server. Installation PHP8.2 Ensuite, nous allons installer PHP. PHP8.2 est activ\u00e9 par d\u00e9faut dans le d\u00e9p\u00f4t Debian 12, donc pour installer PHP8.2 avec les extensions, ex\u00e9cutez les commandes suivantes : sudo apt-get install php8.2 php8.2-cli php8.2-common php8.2-imap php8.2-redis php8.2-snmp php8.2-xml php8.2-mysqli php8.2-zip php8.2-mbstring php8.2-curl libapache2-mod-php -y Pour v\u00e9rifier la version de PHP install\u00e9e, ex\u00e9cutez la commande suivante : php -v Vous devriez obtenir le r\u00e9sultat suivant : PHP 8.2.7 (cli) (built: Jun 9 2023 19:37:27) (NTS) Copyright (c) The PHP Group Zend Engine v4.2.7, Copyright (c) Zend Technologies with Zend OPcache v8.2.7, Copyright (c), by Zend Technologies T\u00e9l\u00e9chargement Wordpress Avant d'installer WordPress, nous devons d'abord le t\u00e9l\u00e9charger dans la racine par d\u00e9faut du document Apache : cd /var/www/html wget https://wordpress.org/latest.zi unzip latest.zip rm latest.zip D\u00e9finir les bonnes autorisations pour les fichiers et les dossiers. chown -R www-data:www-data wordpress/ cd wordpress/ find . -type d -exec chmod 755 {} \\; find . -type f -exec chmod 644 {} \\; Maintenant, ouvrez le fichier wp-config.php avec votre \u00e9diteur pr\u00e9f\u00e9r\u00e9 et entrez les informations d'identification de la base de donn\u00e9es que vous avez cr\u00e9\u00e9es \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente. mv wp-config-sample.php wp-config.php nano wp-config.php Il devrait ressembler \u00e0 ceci : // ** Database settings - You can get this info from your web host ** // /** The name of the database for WordPress */ define( 'DB_NAME', 'wordpress' ); /** Database username */ define( 'DB_USER', 'wordpress' ); /** Database password */ define( 'DB_PASSWORD', 'YourStrongPasswordHere' ); Cr\u00e9ation du VHOST Apache cd /etc/apache2/sites-available/ touch wordpress.conf Contenu <VirtualHost *:80> ServerName wordpress.kaze-cloud-secu.local DocumentRoot /var/www/html/wordpress <Directory /var/www/html/wordpress> AllowOverride All </Directory> ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined </VirtualHost> Activez la configuration Apache pour WordPress et r\u00e9\u00e9crivez le module. sudo a2enmod rewrite sudo a2ensite wordpress.conf systemctl reload apache2 S\u00e9curisation avec un certificat HTTPS Protection HST Protection CORS S\u00e9curisation contre les bots : Crowdsec","title":"Proc\u00e9dure installation & s\u00e9curisation site Wordpress [POC]"},{"location":"#procedure-installation-securisation-site-wordpress-poc","text":"Cette documentation abordera de comment installer un site Wordpress de fa\u00e7on s\u00e9curiser pour un contexte de production.","title":"Proc\u00e9dure installation &amp; s\u00e9curisation site Wordpress [POC]"},{"location":"#reseaux","text":"","title":"R\u00e9seaux"},{"location":"#topologie","text":"Les entreprises disposant d\u2019un site Web public que les clients utilisent doivent rendre leur serveur Web accessible \u00e0 Internet. Pour prot\u00e9ger le r\u00e9seau local de l\u2019entreprise, le serveur Web est install\u00e9 sur un serveur distinct des ressources internes. La DMZ permet la communication entre les ressources commerciales prot\u00e9g\u00e9es, telles que les bases de donn\u00e9es internes, et le trafic qualifi\u00e9 d\u2019Internet. Un r\u00e9seau DMZ sert de tampon entre Internet et le r\u00e9seau priv\u00e9 d\u2019une entreprise. La DMZ est isol\u00e9e par une passerelle de s\u00e9curit\u00e9, telle qu\u2019un pare-feu, qui filtre le trafic entre la DMZ et un r\u00e9seau LAN. Le serveur DMZ par d\u00e9faut est prot\u00e9g\u00e9 par une autre passerelle de s\u00e9curit\u00e9 qui filtre le trafic provenant de r\u00e9seaux externes. Nous utiliseront une machine virtuelle qui utilisera opnsense comme OS. Qui sera office de routeur firewall. Le compartiment des diff\u00e9rents r\u00e9seaux utilisera des switchs virtuels.","title":"Topologie"},{"location":"#matrice-de-flux-et-acl","text":"Source/Destination Serveur Web Serveur de BDD WAN Serveur Web - - permit - permit Serveur de BDD - deny - - deny WAN - permit - deny - Dans cette matrice : La connexion entre le serveur web et le serveur de base de donn\u00e9es est autoris\u00e9e. Le WAN peut acc\u00e9der au serveur web, mais l'acc\u00e8s au serveur de base de donn\u00e9es est refus\u00e9. Les tirets (-) indiquent les cases o\u00f9 aucun flux n'est autoris\u00e9 ou refus\u00e9. Cela peut \u00eatre interpr\u00e9t\u00e9 comme \"aucune r\u00e8gle sp\u00e9cifique d\u00e9finie\". Les donn\u00e9es peuvent circuler de mani\u00e8re bidirectionnelle entre les sources et les destinations La r\u00e8gle par d\u00e9faut est deny deny Nous detailleronts pas la configuration d'ACL sur l'opnsense.","title":"Matrice de flux et ACL"},{"location":"#nat","text":"Sur l'interface WAN il faudra cr\u00e9er la r\u00e8gle NAT de port forwarding suivante: DESTINATION IP FROM IP PORT FORWARD IP FORWARD PORT PROTOCOL @WAN_IP ANY 80 @LAN_IP_WEB 80 TCP @WAN_IP ANY 443 @LAN_IP_WEB 443 TCP @WAN_IP : Correspond \u00e0 l'IP WAN de l'interface du routeur firewall @LAN_IP_WEB : Correspond \u00e0 l'IP lan du serveur WEB. Nous detailleronts pas la configuration de r\u00e8gles NAT de port forwarding sur l'opnsense.","title":"NAT"},{"location":"#back-end","text":"","title":"Back end"},{"location":"#update","text":"sudo apt update sudo apt full-upgrade -y reboot","title":"Update"},{"location":"#installation-base-de-donnees","text":"Vous pouvez installer MariaDB \u00e0 l'aide de la commande suivante : apt install mariadb-server mariadb-client D\u00e9marrez le d\u00e9mon du serveur de base de donn\u00e9es et activez-le pour qu'il d\u00e9marre automatiquement au prochain d\u00e9marrage \u00e0 l'aide des commandes suivantes : systemctl start mariadb systemctl enable mariadb","title":"Installation base de donn\u00e9es"},{"location":"#post-installation","text":"Une fois le serveur de base de donn\u00e9es install\u00e9, ex\u00e9cutez la commande suivante pour s\u00e9curiser votre serveur MariaDB: mysql_secure_installation Plusieurs questions de configuration vous seront alors pos\u00e9es, auxquelles vous devrez r\u00e9pondre Y \u00e0 chacune d'entre elles. Remove anonymous users? [Y/n]: Y Disallow root login remotely? [Y/n]: Y Remove test database and access to it? [Y/n]: Y Reload privilege tables now? [Y/n]: Y Relancer le service mariadb: systemctl restart mariadb","title":"Post installation"},{"location":"#creation-un-utilisateur-base-de-donnees-limiter","text":"CREATE USER 'wordpress'@'192.168.0.1' IDENTIFIED BY 'CHANGEME'; CREATE DATABASE wordpress; GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress'@'192.168.0.1'; FLUSH PRIVILEGES; EXIT;","title":"Cr\u00e9ation un utilisateur base de donn\u00e9es limiter"},{"location":"#fron-end","text":"","title":"Fron end"},{"location":"#update_1","text":"sudo apt update sudo apt full-upgrade -y reboot","title":"Update"},{"location":"#installation-basique-de-wordpress","text":"","title":"Installation basique de Wordpress"},{"location":"#installation-apache","text":"Nous commencerons par le serveur web Apache. Pour installer le serveur web Apache, ex\u00e9cutez la commande suivante : sudo apt install apache2 -y Puis on active le service: sudo systemctl enable apache2 && sudo systemctl start apache2 V\u00e9rification que le sevice fonctionne: sudo systemctl status apache2 La sortie de commande: root@host:~# sudo systemctl status apache2 \u25cf apache2.service - The Apache HTTP Server Loaded: loaded (/lib/systemd/system/apache2.service; enabled; preset: enabled) Active: active (running) since Mon 2024-04-08 20:58:30 UTC; 13s ago Docs: https://httpd.apache.org/docs/2.4/ Main PID: 2011 (apache2) Tasks: 55 (limit: 4652) Memory: 17.1M CPU: 141ms CGroup: /system.slice/apache2.service \u251c\u25002011 /usr/sbin/apache2 -k start \u251c\u25002012 /usr/sbin/apache2 -k start \u2514\u25002013 /usr/sbin/apache2 -k start Apr 08 20:58:30 wordpress systemd[1]: Starting apache2.service - The Apache HTTP Server... Apr 08 20:58:30 wordpress systemd[1]: Started apache2.service - The Apache HTTP Server.","title":"Installation Apache"},{"location":"#installation-php82","text":"Ensuite, nous allons installer PHP. PHP8.2 est activ\u00e9 par d\u00e9faut dans le d\u00e9p\u00f4t Debian 12, donc pour installer PHP8.2 avec les extensions, ex\u00e9cutez les commandes suivantes : sudo apt-get install php8.2 php8.2-cli php8.2-common php8.2-imap php8.2-redis php8.2-snmp php8.2-xml php8.2-mysqli php8.2-zip php8.2-mbstring php8.2-curl libapache2-mod-php -y Pour v\u00e9rifier la version de PHP install\u00e9e, ex\u00e9cutez la commande suivante : php -v Vous devriez obtenir le r\u00e9sultat suivant : PHP 8.2.7 (cli) (built: Jun 9 2023 19:37:27) (NTS) Copyright (c) The PHP Group Zend Engine v4.2.7, Copyright (c) Zend Technologies with Zend OPcache v8.2.7, Copyright (c), by Zend Technologies","title":"Installation PHP8.2"},{"location":"#telechargement-wordpress","text":"Avant d'installer WordPress, nous devons d'abord le t\u00e9l\u00e9charger dans la racine par d\u00e9faut du document Apache : cd /var/www/html wget https://wordpress.org/latest.zi unzip latest.zip rm latest.zip D\u00e9finir les bonnes autorisations pour les fichiers et les dossiers. chown -R www-data:www-data wordpress/ cd wordpress/ find . -type d -exec chmod 755 {} \\; find . -type f -exec chmod 644 {} \\; Maintenant, ouvrez le fichier wp-config.php avec votre \u00e9diteur pr\u00e9f\u00e9r\u00e9 et entrez les informations d'identification de la base de donn\u00e9es que vous avez cr\u00e9\u00e9es \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente. mv wp-config-sample.php wp-config.php nano wp-config.php Il devrait ressembler \u00e0 ceci : // ** Database settings - You can get this info from your web host ** // /** The name of the database for WordPress */ define( 'DB_NAME', 'wordpress' ); /** Database username */ define( 'DB_USER', 'wordpress' ); /** Database password */ define( 'DB_PASSWORD', 'YourStrongPasswordHere' );","title":"T\u00e9l\u00e9chargement Wordpress"},{"location":"#creation-du-vhost-apache","text":"cd /etc/apache2/sites-available/ touch wordpress.conf Contenu <VirtualHost *:80> ServerName wordpress.kaze-cloud-secu.local DocumentRoot /var/www/html/wordpress <Directory /var/www/html/wordpress> AllowOverride All </Directory> ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined </VirtualHost> Activez la configuration Apache pour WordPress et r\u00e9\u00e9crivez le module. sudo a2enmod rewrite sudo a2ensite wordpress.conf systemctl reload apache2","title":"Cr\u00e9ation du VHOST Apache"},{"location":"#securisation-avec-un-certificat-https","text":"","title":"S\u00e9curisation avec un certificat HTTPS"},{"location":"#protection-hst","text":"","title":"Protection HST"},{"location":"#protection-cors","text":"","title":"Protection CORS"},{"location":"#securisation-contre-les-bots-crowdsec","text":"","title":"S\u00e9curisation contre les bots : Crowdsec"}]}